先打開Genymotion( use Google Nexw4
react-native init projectname
-----------------------------------
創建 react-native init --version 0.57.8 projectname (否則icon套件等等會報錯

使用react native 0.57.8
open cmd -> cd project -> react-native start
open cmd -> cd project -> react-native run-android

---------------------------------------------------
cd desktop/test2
react-native start

cd desktop/test2
react-native run-android

-------------------------------------------此為登入介面
cd desktop/login2
react-native start

cd desktop/login2
react-native run-android

使用了 react-native-vector-icons方法(如果透明的話)
1.
Edit android/app/build.gradle ( NOT android/build.gradle ) and add the following:

apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"


2.
react-native link

然後再重啟看看


----------------------------------------------圖片適合裝置大小 & 往最上最下
cd desktop/scroll2
react-native start

cd desktop/scroll2
react-native run-android

-------------------------------------------------滾動式和初步引用.json(可搭配下面
cd desktop/scrollpackage2
react-native start

cd desktop/scrollpackage2
react-native run-android

使用了 leecade / react-native-swiper
-----------------------------------------------------引用.json 並可新增 & 圖標
cd desktop/flash2
react-native start

cd desktop/flash2
react-native run-android

使用了maxs15 / react-native-modalbox , react-native-vector-icons, dancormier / react - native - swipeout , APSL/react-native-button
備註 : 只有flash2在AddModal才會往最底層 (flash3因為切割了模組 程式碼更改 所以新增時不會自動往最底層)
flash4為橫向展現

---------------------------------------------------------(後台交互)啟用json-server --watch db.json
cd desktop/demo2
react-native start

cd desktop/demo2
react-native run-android



下載jhen0409 / react-native-debugger  (window version
然後用remotely js debugging

使用Genymotion發現沒辦法正常顯示FlatList項目，即使json是在http://localhost:3000/.......
在使用fetch時，也要改成符合Genymotion的模擬器IP -> fetch('http://10.0.3.2:3000/.......')
--------------------------------------------------------------
cd desktop/nav1
react-native start

cd desktop/nav1
react-native run-android

下載react-navigation 以及 react-native-gesture-handler 最後再 react-native link   & 安裝react-native-vector-icons


在nav2中 使用navigation的icon裡 onPress時除了遵守Navigation 1.x版本外，又因為[定義state]緣故，
所以記得使用的是 *this.* props.navigation來處理路由跳轉又或著傳遞參數

在nav3中 可先用createStackNavigator 最後再用createAppContainer 把所有分支統合。
[在MainStack的headerMode: 'none'] :  把這一層的所有標題都去除掉，包含 RootStack 的navigationOptions的title資訊 ，但是RootStack里各個底下的
HomeScreen.navigationOptions，SettingsScreen.navigationOption，DetailScreen.navigationOptions仍然有效果。
MainStack底下放 主要節點 以及 分支節點 ，他們各有自己的首頁


在nav4中 記得要用穩定版本react-navigation V2  
-+-----------------------------------------------------------------
